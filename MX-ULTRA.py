import base64
exec(base64.b64decode("Iy0tLS0tLS0tLS0tLS0tLS0tWyBJTVBPUlQtTU9EVUxFIF0tLS0tLS0tLS0tLS0tLS0tLS0tDQpmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBzb3ANCmltcG9ydCByZXF1ZXN0cyxiczQsanNvbixvcyxzeXMscmFuZG9tLGRhdGV0aW1lLHRpbWUscmUNCmltcG9ydCB1cmxsaWIzLHJpY2gsYmFzZTY0DQpmcm9tIHJpY2gudGFibGUgaW1wb3J0IFRhYmxlIGFzIG1lDQpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZSBhcyBzb2wNCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHNvcA0KZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyB0cmVkDQpmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgR3JvdXAgYXMgZ3ANCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwgYXMgbmVsDQpmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIGNldGFrDQpmcm9tIHJpY2gubWFya2Rvd24gaW1wb3J0IE1hcmtkb3duIGFzIG1hcmsNCmZyb20gcmljaC5jb2x1bW5zIGltcG9ydCBDb2x1bW5zIGFzIGNvbA0KZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBycHJpbnQNCmZyb20gcmljaCBpbXBvcnQgcHJldHR5DQpmcm9tIHJpY2gudGV4dCBpbXBvcnQgVGV4dCBhcyB0ZWt6DQppbXBvcnQgdGltZQ0KZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZQ0KZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUNCmZyb20gdGltZSBpbXBvcnQgc2xlZXANCmZyb20gdGltZSBpbXBvcnQgc2xlZXAgYXMgd2FrdHUNCnByZXR0eS5pbnN0YWxsKCkNCkNPTj1zb2woKQ0KDQpub3cgPSBkYXRldGltZS5ub3coKQ0KZHRfc3RyaW5nID0gbm93LnN0cmZ0aW1lKCIlSDolTSIpDQpjdXJyZW50ID0gZGF0ZXRpbWUubm93KCkNCnRhID0gY3VycmVudC55ZWFyDQpidSA9IGN1cnJlbnQubW9udGgNCmhhID0gY3VycmVudC5kYXkNCg0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgVVNFUi1BR0VOVCBdLS0tLS0tLS0tLS0tLS0tLS0tLSMNCnVnZW4yPVtdDQp1Z2VuPVtdDQpjb2ticnV0PVtdDQpzZXM9cmVxdWVzdHMuU2Vzc2lvbigpDQpwcmluY3A9W10NCnRyeToNCglwcm94PSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vYXBpLnByb3h5c2NyYXBlLmNvbS92Mi8/cmVxdWVzdD1kaXNwbGF5cHJveGllcyZwcm90b2NvbD1zb2NrczQmdGltZW91dD0xMDAwMDAmY291bnRyeT1hbGwmc3NsPWFsbCZhbm9ueW1pdHk9YWxsJykudGV4dA0KCW9wZW4oJy5wcm94LnR4dCcsJ3cnKS53cml0ZShwcm94KSANCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCglwcmludCgnIFx4MWJbMTs5MW0aXHgxYlsxOzk2bRpceDFiWzE7OTJtGiBceDFiWzE7OTZtW01YJykNCnByb3g9b3BlbignLnByb3gudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCmZvciB4ZCBpbiByYW5nZSgxMDAwMCk6DQoJYT0nTW96aWxsYS81LjAgKFN5bWJpYW4vMzsgU2VyaWVzNjAvJw0KCWI9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWM9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWQ9J05va2lhJw0KCWU9cmFuZG9tLnJhbmRyYW5nZSgxMDAsIDk5OTkpDQoJZj0nLzExMC4wMjEuMDAyODsgUHJvZmlsZS9NSURQLTIuMSBDb25maWd1cmF0aW9uL0NMREMtMS4xICkgQXBwbGVXZWJLaXQvNTM1LjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBOb2tpYUJyb3dzZXIvJw0KCWc9cmFuZG9tLnJhbmRyYW5nZSgxLCA5KQ0KCWg9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KCWk9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KCWo9cmFuZG9tLnJhbmRyYW5nZSgxLCA0KQ0KCWs9J01vYmlsZSBTYWZhcmkvNTM1LjEnDQoJdWFrdT0oZid7YX17Yn0ue2N9IHtkfXtlfXtmfXtnfS57aH0ue2l9LntqfSB7a30nKQ0KCXVnZW4yLmFwcGVuZCh1YWt1KQ0KDQoNCglhYT0nTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkJw0KCWI9cmFuZG9tLmNob2ljZShbJzYnLCc3JywnOCcsJzknLCcxMCcsJzExJywnMTInXSkNCgljPScgZW4tdXM7IEdULScNCglkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KCWU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpDQoJZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCglnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJw0KCWg9cmFuZG9tLnJhbmRyYW5nZSg3MywxMDApDQoJaT0nMCcNCglqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQ0KCWs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApDQoJbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYnDQoJdWFrdTI9Zid7YWF9IHtifTsge2N9e2R9e2V9e2Z9KSB7Z317aH0ue2l9LntqfS57a30ge2x9Jw0KCXVnZW4uYXBwZW5kKHVha3UyKQ0KZm9yIHggaW4gcmFuZ2UoMTApOg0KCWE9J01vemlsbGEvNS4wIChTQU1TVU5HOyBTQU1TVU5HLUdULVMnDQoJYj1yYW5kb20ucmFuZHJhbmdlKDEwMCwgOTk5OSkNCgljPXJhbmRvbS5yYW5kcmFuZ2UoMTAwLCA5OTk5KQ0KCWQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQoJZT1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCglmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KCWc9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQoJaD1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQoJaT0nOyBVOyBCYWRhLzEuMjsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMy4xIChLSFRNTCwgbGlrZSBHZWNrbykgRG9sZmluLycNCglqPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCglrPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCglsPSdNb2JpbGUgV1ZHQSBTTU0tTU1TLzEuMi4wIE9QTi1CJw0KCXVhaz1mJ3thfXtifS97Y317ZH17ZX17Zn17Z317aH17aX17an0ue2t9IHtsfScNCmRlZiB1YWt1KCk6DQoJdHJ5Og0KCQl1YT1vcGVuKCdiYm5ldy50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KCQlmb3IgdWIgaW4gdWE6DQoJCQl1Z2VuLmFwcGVuZCh1YikNCglleGNlcHQ6DQoJCWE9cmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vRUMtMTcwOS9hL2Jsb2IvbWFpbi9iYm5ldy50eHQnKS50ZXh0DQoJCXVhPW9wZW4oJy5iYm5ldy50eHQnLCd3JykNCgkJYWE9cmUuZmluZGFsbCgnbGluZSI+KC4qPyk8JyxzdHIoYSkpDQoJCWZvciB1biBpbiBhYToNCgkJCXVhLndyaXRlKHVuKydcbicpDQoJCXVhPW9wZW4oJy5iYm5ldy50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KIy0tLS0tLS0tLS0tLVsgSU5ESUNBVElPTiBdLS0tLS0tLS0tLS0tLS0tIw0KaWQsaWQyLGxvb3Asb2ssY3AsYWt1bixvcHJlayxtZXRob2QsbGlzZW5zaWt1LHRhcGxpa2FzaSx0b2tlbmt1LHVpZCxsaXNlbnNpa3VuaT0gW10sW10sMCwwLDAsW10sW10sW10sW10sW10sW10sW10sW10NCmNva2JydXQ9W10NCnB3cGx1c3MscHdueWE9W10sW10NCiMtLS0tLS0tLS0tLS1bIFdBUk5BLUNPTE9SIF0tLS0tLS0tLS0tLS0tLSMNClAgPSAnXHgxYlsxOzk3bScNCk0gPSAnXHgxYlsxOzkxbScNCkggPSAnXHgxYlsxOzkybScNCksgPSAnXHgxYlsxOzkzbScNCkIgPSAnXHgxYlsxOzk0bScNClUgPSAnXHgxYlsxOzk1bScgDQpPID0gJ1x4MWJbMTs5Nm0nDQpOID0gJ1x4MWJbMG0nICAgIA0KWiA9ICJcMDMzWzE7MzBtIg0Kc2lyID0gJ1wwMzNbNDFtXHgxYlsxOzk3bScNCnggPSAnXDMzW20nICMgREVGQVVMVA0KbSA9ICdceDFiWzE7OTFtJyAjUkVEICsNCmsgPSAnXDAzM1s5M20nICMgS1VOSU5HICsNCmggPSAnXHgxYlsxOzkybScgIyBISUpBVSArDQpoaCA9ICdcMDMzWzMybScgIyBISUpBVSAtDQp1ID0gJ1wwMzNbOTVtJyAjIFVOR1UNCmtrID0gJ1wwMzNbMzNtJyAjIEtVTklORyAtDQpiID0gJ1wzM1sxOzk2bScgIyBCSVJVIC0NCnAgPSAnXHgxYlswOzM0bScgIyBCSVJVICsNCmFzdSA9IHJhbmRvbS5jaG9pY2UoW20sayxoLHUsYl0pDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBNQUNISU5FLVNVUFBPUlQgXS0tLS0tLS0tLS0tLS0tLSMNCmRlZiBjbGVhcigpOg0KICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgIGJhbm5lcigpDQpmcm9tIHRpbWUgaW1wb3J0IGxvY2FsdGltZSBhcyBsdA0KZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIGNtZA0KbHR4ID0gaW50KGx0KClbM10pDQppZiBsdHggPiAxMjoNCiAgICBhID0gbHR4LTEyDQogICAgdGFnID0gIlx4MWJbMTs5MW1QTSINCmVsc2U6DQogICAgYSA9IGx0eA0KICAgIHRhZyA9ICJceDFiWzE7OTZtQU0iDQoNCmRlZiBfS0FVU0FSXyh1KToNCiAgICAgICAgZm9yIGUgaW4gdSArICJcbiI6c3lzLnN0ZG91dC53cml0ZShlKTtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjAwMikNCmRlZiBjbGVhcigpOg0KCW9zLnN5c3RlbSgnY2xlYXInKQ0KZGVmIGJhY2soKToNCglsb2dpbigpDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBMT0dPLUxBS05BVCBdLS0tLS0tLS0tLS0tLS0tLS0jDQpkZWYgYmFubmVyKCk6DQoJcHJpbnQoZiIiIg0KXHgxYlsxOzkybeKVlOKVkOKVl+KVlOKVkOKVpuKVkOKVkOKVkOKVpuKVkOKVl+KVlOKVkOKVpuKVl+KUgOKVlOKVpuKVkOKVl+KUgOKVlOKVl+KUgOKVlOKVkOKVl+KVlOKVkOKVlw0KXHgxYlsxOzkybeKVkeKVkeKVmuKVneKVkeKVkeKVlOKVkOKVl+KVkeKVkeKVmuKVneKVkeKVkeKVkeKUgOKVkeKVkeKVkeKVmuKVl+KVkeKVkeKUgOKVmuKVl+KVmuKVneKVlOKVnQ0KXHgxYlsxOzkxbeKVkeKVlOKVl+KVlOKVl+KVkeKVkeKUgOKVkeKVkeKVlOKVl+KVlOKVl+KVkeKVkeKUgOKVkeKVkeKVlOKVl+KVmuKVneKVkeKUgOKUgOKVmuKVl+KVlOKVnQ0KXHgxYlsxOzkxbeKVkeKVkeKVkeKVkeKVkeKVkeKVmuKVkOKVneKVkeKVkeKVkeKVkeKVkeKVkeKVkeKUgOKVkeKVkeKVkeKVmuKVl+KVkeKVoOKVkOKVkOKVpuKVneKVmuKVlw0KXHgxYlsxOzkybeKVkeKVkeKVkeKVkeKVkeKVkeKVlOKVkOKVl+KVkeKVkeKVkeKVkeKVkeKVkeKVmuKVkOKVneKVkeKVkeKUgOKVkeKVkeKVoOKVkOKVpuKVneKVlOKVl+KVmuKVlw0KXHgxYlsxOzkybeKVmuKVneKVmuKVneKVmuKVqeKVneKUgOKVmuKVqeKVneKVmuKVneKVmuKVqeKVkOKVkOKVkOKVqeKVneKUgOKVmuKVkOKVneKUgOKVmuKVkOKVneKVmuKVkOKVnSAgIA0KXHgxYlsxOzkxbeKUj+KUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkw0KXHgxYlsxOzkxbeKUglx4MWJbMTs5MW0gWytdICBceDFiWzE7OTJtIEFVVEhPUiAgICAgOiBNIEEgTSBVIE4gICAgICAgICAgICAgICAgICAgICANClx4MWJbMTs5MW3ilIJceDFiWzE7OTFtIFsrXSAgXHgxYlsxOzkybSBXSEFUU0FQUCAgIDogKzg4MDEzMDQwNjg4NiAgICAgICAgICAgICAgIA0KXHgxYlsxOzkxbeKUglx4MWJbMTs5MW0gWytdICBceDFiWzE7OTJtIFNUQVRVUyAgICAgOiBGSUxFICsgUFVCTElDIENMT05JTkcgIA0KXHgxYlsxOzkxbeKUglx4MWJbMTs5MW0gWytdICBceDFiWzE7OTJtIEdJVEhVQiAgICAgOiBNQU1VTi00MDQtQ1lCRVIgICAgICAgICANClx4MWJbMTs5MW3ilJfilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJsNCiBceDFiWzE7OTJtIiIiKQ0Kb3Muc3lzdGVtKCdjbGVhcicpDQpiYW5uZXIoKQ0Kb3Muc3lzdGVtKCJwbGF5LWF1ZGlvIEFTU0FMQU1VQUxBSUtVTV9XRUxDT01FX1RPX01YX1dPUkxELm1wMyIpDQpwcmludChmJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXDAzM1s0N21cMDMzWzE7MzFtV2hhdCBJcyBZb3VyIE5hbWVcMDMzWzQwbVwwMzNbMDBtJykNCktBVVNBUl9OQU1FPWlucHV0KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBZb3VyIE5hbWUg4p6jXHgxYlsxOzk2bSAnKQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tWyBCQUdJQU4tTUFTVUsgXS0tLS0tLS0tLS0tLS0tIw0KZGVmIGxvZ2luKCk6DQoJdHJ5Og0KCQl0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpDQoJCWNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQ0KCQl0b2tlbmt1LmFwcGVuZCh0b2tlbikNCgkJdHJ5Og0KCQkJc3kgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2ZpZWxkcz1pZCxuYW1lJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXM9eydjb29raWUnOmNva30pDQoJCQlzeTIgPSBqc29uLmxvYWRzKHN5LnRleHQpWyduYW1lJ10NCgkJCXN5MyA9IGpzb24ubG9hZHMoc3kudGV4dClbJ2lkJ10NCgkJCW1lbnUoc3kyLHN5MykNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJbG9naW5fbGFnaTMzNCgpDQoJCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCgkJCWxpID0gJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgQ2hlY2sgWW91ciBJbnRlcm5ldCBUaGVuIFRyeSBBZ2FpbicNCgkJCWxvID0gbWFyayhsaSwgc3R5bGU9J3JlZCcpDQoJCQlzb2woKS5wcmludChsbywgc3R5bGU9J3B1cnBsZScpDQoJCQlleGl0KCkNCglleGNlcHQgSU9FcnJvcjoNCgkJbG9naW5fbGFnaTMzNCgpDQpkZWYgbG9naW5fbGFnaTMzNCgpOg0KCXRyeToNCgkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCWJhbm5lcigpDQoJCWFzdSA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdV0pDQoJCWNvb2tpZT1pbnB1dChmJyBceDFiWzE7OTFtGlx4MWJbMTs5Nm0aXHgxYlsxOzkybRogRW50ZXIgIEZyZXNoIENvb2tpZXMgOnthc3V9ICcpDQoJCWRhdGEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYnVzaW5lc3MuZmFjZWJvb2suY29tL2J1c2luZXNzX2xvY2F0aW9ucyIsIGhlYWRlcnMgPSB7InVzZXItYWdlbnQiOiAiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDYuMC4xOyBSZWRtaSA0QSBCdWlsZC9NTUIyOU0pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81OS4wLjMwNzEuOTIgTW9iaWxlIFNhZmFyaS81MzcuMzYiLCJyZWZlcmVyIjogImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS8iLCJob3N0IjogImJ1c2luZXNzLmZhY2Vib29rLmNvbSIsIm9yaWdpbiI6ICJodHRwczovL2J1c2luZXNzLmZhY2Vib29rLmNvbSIsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiIDogIjEiLCJhY2NlcHQtbGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciLCJjYWNoZS1jb250cm9sIjogIm1heC1hZ2U9MCIsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IGNsb3Nlcl0vW2luc2VydGVkIGJ5IGN5dGhvbiB0byBhdm9pZCBjb21tZW50IHN0YXJ0XSo7cT0wLjgiLCJjb250ZW50LXR5cGUiOiJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgifSwgY29va2llcyA9IHsiY29va2llIjpjb29raWV9KSANCgkJZmluZF90b2tlbiA9IHJlLnNlYXJjaCgiKEVBQUdcdyspIiwgZGF0YS50ZXh0KQ0KCQlrZW49b3BlbigiLnRva2VuLnR4dCIsICJ3Iikud3JpdGUoZmluZF90b2tlbi5ncm91cCgxKSkNCgkJY29rPW9wZW4oIi5jb2sudHh0IiwgInciKS53cml0ZShjb29raWUpDQoJCXByaW50KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBMb2dpbiBTdWNjZXNzZnVsIFxuIFx4MWJbMTs5MW0aXHgxYlsxOzk2bRpceDFiWzE7OTJtGiBUeXBlIFx4MWJbMTs5Nm1weXRob24gTVgtVUxUUkEucHknKTt0aW1lLnNsZWVwKDEpDQoJCWV4aXQoKQ0KCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJb3Muc3lzdGVtKCJybSAtZiAudG9rZW4udHh0IikNCgkJb3Muc3lzdGVtKCJybSAtZiAuY29rLnR4dCIpDQoJCXByaW50KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtRVJST1IgQlJPIENIRUNLIFlPVVIgQ09PS0lFUyBJRCcpDQoJCWV4aXQoKQ0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgQkFHSUFOLU1FTlUgXS0tLS0tLS0tLS0tLS0tLS0jDQpkZWYgbWVudShteV9uYW1lLG15X2lkKToNCgl0cnk6DQoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkNCgkJY29rID0gb3BlbignLmNvay50eHQnLCdyJykucmVhZCgpDQoJZXhjZXB0IElPRXJyb3I6DQoJCXByaW50KCcgXHgxYlsxOzkxbRpceDFiWzE7OTZtGlx4MWJbMTs5MW0aIENvb2tpZXMgRXhwaXJlZCAnKQ0KCQl0aW1lLnNsZWVwKDUpDQoJCWxvZ2luX2xhZ2kzMzQoKQ0KCW9zLnN5c3RlbSgnY2xlYXInKQ0KCWJhbm5lcigpDQoJaXAgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYXBpLmlwaWZ5Lm9yZyIpLnRleHQNCglfS0FVU0FSXyhmJ1x4MWJbMTs5MW3ilI/ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJMnKQ0KCV9LQVVTQVJfKGYnXHgxYlsxOzkxbeKUglwwMzNbNDdtXDAzM1sxOzMwbVBSRU1JVU0gVVNFUiBJTkZPUk1BVElPTlwwMzNbNDBtXDAzM1swMG1ceDFiWzE7OTFt4pSCJykNCglfS0FVU0FSXyhmJ1x4MWJbMTs5MW3ilKDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilK/ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJsnKQ0KCV9LQVVTQVJfKGYnXHgxYlsxOzkxbeKUglx4MWJbMTs5Mm1Zb3VyIE5hbWVceDFiWzE7OTFt4pSA4pSA4pSA4pSA4pWC4p6jXHgxYlsxOzkybSAnK3N0cihLQVVTQVJfTkFNRSkpDQoJX0tBVVNBUl8oZidceDFiWzE7OTFt4pSCXHgxYlsxOzkybVlvdXIgSUQgTmFtZVx4MWJbMTs5MW3ilIDilYLinqNceDFiWzE7OTJtIHtteV9uYW1lfScpDQoJX0tBVVNBUl8oZidceDFiWzE7OTFt4pSCXHgxYlsxOzkybUNsb25pbmcgRGF0ZVx4MWJbMTs5MW3ilIDilYLinqMgXHgxYlsxOzkybXtoYX1ceDFiWzE7OTFtL1x4MWJbMTs5Mm17YnV9XHgxYlsxOzkxbS9ceDFiWzE7OTJte3RhfScpDQoJX0tBVVNBUl8oZiJceDFiWzE7OTFt4pSCXHgxYlsxOzkybUNsb25pbmcgVGltZVx4MWJbMTs5MW3ilIDilYLinqMgXHgxYlsxOzkybSIrc3RyKGEpKyI6IitzdHIobHQoKVs0XSkrIiAiKyB0YWcrIiAiKQ0KCV9LQVVTQVJfKGYnXHgxYlsxOzkxbeKUglx4MWJbMTs5Mm1Zb3VyIElEXHgxYlsxOzkxbeKUgOKUgOKUgOKUgOKUgOKUgOKVguKeo1x4MWJbMTs5Mm0gJytzdHIobXlfaWQpKQ0KCV9LQVVTQVJfKGYnXHgxYlsxOzkxbeKUglx4MWJbMTs5Mm1Zb3VyIElQXHgxYlsxOzkxbeKUgOKUgOKUgOKUgOKUgOKUgOKVguKeoyBceDFiWzE7OTJte2lwfScpDQoJX0tBVVNBUl8oZidceDFiWzE7OTFt4pSX4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSbJykNCglfS0FVU0FSXyhmJ1x4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBcMDMzWzQ3bVwwMzNbMTszNG0gIENSQUNLIE1FVEhPRCAgXDAzM1s0MG1cMDMzWzAwbScpDQoJX0tBVVNBUl8oZidceDFiWzE7OTFtW1x4MWJbMTs5Mm0xXHgxYlsxOzkxbV1ceDFiWzE7OTJtIEZJTEUgQ1JBQ0snKQ0KCV9LQVVTQVJfKGYnXHgxYlsxOzkxbVtceDFiWzE7OTJtMlx4MWJbMTs5MW1dXHgxYlsxOzkybSBQVUJMSUMgQ1JBQ0snKQ0KCV9LQVVTQVJfKGYnXHgxYlsxOzkxbVtceDFiWzE7OTJtM1x4MWJbMTs5MW1dXHgxYlsxOzkybSBDT05UQUNUIE1FJykNCglfS0FVU0FSXyhmJ1x4MWJbMTs5MW1bXHgxYlsxOzkybTBceDFiWzE7OTFtXVx4MWJbMTs5MW0gTE9HT1VUIENPT0tJRSAmIEVYSVQnKQ0KCV9fX19fS0FVU0FSX19fX18gPSBpbnB1dCgnXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIFx4MWJbMTs5NG1DaG9pY2Ug4p6jXHgxYlsxOzkybSAnKQ0KCWlmIF9fX19fS0FVU0FSX19fX18gaW4gWycxJ106DQoJCW9zLnN5c3RlbSgicGxheS1hdWRpbyBGaXJzcl9Gb2xsb3dfTXlfR2l0SHViLm1wMyIpDQoJCUYoKQ0KCWlmIF9fX19fS0FVU0FSX19fX18gaW4gWycyJ106DQoJCW9zLnN5c3RlbSgicGxheS1hdWRpbyBGaXJzcl9Gb2xsb3dfTXlfR2l0SHViLm1wMyIpDQoJCVAoKQ0KCWlmIF9fX19fS0FVU0FSX19fX18gaW4gWyczJ106DQoJCW9zLnN5c3RlbSgicGxheS1hdWRpbyBGaXJzcl9Gb2xsb3dfTXlfR2l0SHViLm1wMyIpDQoJCW9zLnN5c3RlbSgieGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Byb2ZpbGUucGhwP2lkPTEwMDA3ODUzOTMxNjI4NiIpDQoJaWYgX19fX19LQVVTQVJfX19fXyBpbiBbJzAnXToNCgkJb3Muc3lzdGVtKCdybSAtcmYgLnRva2VuLnR4dCcpDQoJCW9zLnN5c3RlbSgncm0gLXJmIC5jb29raWUudHh0JykNCgkJcHJpbnQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgTG9nT3V0IFN1Y2Nlc3NmdWwgJykNCgkJZXhpdCgpDQoJZWxzZToNCgkJcHJpbnQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgU3VjY2Vzc2Z1bCBCcmEg8J+YhCAnKQ0KCQliYWNrKCkNCmRlZiBlcnJvcigpOg0KCXByaW50KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtU29ycnksIFBseiBDaG9vc2UgdGhlIFJpZ2h0IE1lbnUnKQ0KCXRpbWUuc2xlZXAoMikNCgliYWNrKCkNCgkNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS1bQVBQTElDQVRJT04gQ0hFQ0tFUl0tLS0tLS0tLS0tLS0tLS0tLS0tLS0jDQpkZWYgY2VrX2FwayhzZXNzaW9uLGNva2kpOg0KICAgIHc9c2Vzc2lvbi5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9zZXR0aW5ncy9hcHBzL3RhYmJlZC8/dGFiPWFjdGl2ZSIsY29va2llcz17ImNvb2tpZSI6Y29raX0pLnRleHQNCiAgICBzb3AgPSBCZWF1dGlmdWxTb3VwKHcsImh0bWwucGFyc2VyIikNCiAgICB4ID0gc29wLmZpbmQoImZvcm0iLG1ldGhvZD0icG9zdCIpDQogICAgZ2FtZSA9IFtpLnRleHQgZm9yIGkgaW4geC5maW5kX2FsbCgiaDMiKV0NCiAgICBpZiBsZW4oZ2FtZSk9PTA6DQogICAgICAgIHByaW50KGYnXHIlc1slcyElc10gJXNTb3JyeSB0aGVyZSBpcyBubyBBY3RpdmUgIEFwayVzICAnJShOLE0sTixNLE4pKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KGYnXHJb8J+Orl0gJXMg4piGIFlvdXIgQWN0aXZlIEFwcHMg4piGICAgICA6e1dISVRFfSclKEdSRUVOKSkNCiAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKGdhbWUpKToNCiAgICAgICAgICAgIHByaW50KGYiXHJbJXMlc10gJXMlcyIlKE4saSsxLGdhbWVbaV0ucmVwbGFjZSgiRGl0YW1iYWhrYW4gcGFkYSIsIiBEaXRhbWJhaGthbiBwYWRhIiksTikpDQogICAgICAgICNlbHNlOg0KICAgICAgICAgICAgI3ByaW50KGYnXHIgJXNbJXMhJXNdIFNvcnJ5LCBBcGsgY2hlY2sgZmFpbGVkIGludmFsaWQgY29va2llJyUoTixNLE4pKQ0KICAgIHc9c2Vzc2lvbi5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9zZXR0aW5ncy9hcHBzL3RhYmJlZC8/dGFiPWluYWN0aXZlIixjb29raWVzPXsiY29va2llIjpjb2tpfSkudGV4dA0KICAgIHNvcCA9IEJlYXV0aWZ1bFNvdXAodywiaHRtbC5wYXJzZXIiKQ0KICAgIHggPSBzb3AuZmluZCgiZm9ybSIsbWV0aG9kPSJwb3N0IikNCiAgICBnYW1lID0gW2kudGV4dCBmb3IgaSBpbiB4LmZpbmRfYWxsKCJoMyIpXQ0KICAgIGlmIGxlbihnYW1lKT09MDoNCiAgICAgICAgcHJpbnQoZidcciVzWyVzISVzXSAlc1NvcnJ5IHRoZXJlIGlzIG5vIEV4cGlyZWQgQXBrJXMgICAgICAgICAgIFxuJyUoTixNLE4sTSxOKSkNCiAgICBlbHNlOg0KICAgICAgICBwcmludChmJ1xyW/Cfjq5dICVzIOKXhyBZb3VyIEV4cGlyZWQgQXBwcyDil4cgICAgOntXSElURX0nJShNKSkNCiAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKGdhbWUpKToNCiAgICAgICAgICAgIHByaW50KGYiXHJbJXMlc10gJXMlcyIlKE4saSsxLGdhbWVbaV0ucmVwbGFjZSgiS2VkYWx1d2Fyc2EiLCIgS2VkYWx1d2Fyc2EiKSxOKSkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIHByaW50KDU3KictJykNCg0KZGVmIFAoKToNCgl0cnk6DQoJCXRva2VuID0gb3BlbignLnRva2VuLnR4dCcsJ3InKS5yZWFkKCkNCgkJY29rID0gb3BlbignLmNvay50eHQnLCdyJykucmVhZCgpDQoJZXhjZXB0IElPRXJyb3I6DQoJCWV4aXQoKQ0KCXRyeToNCgkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCWJhbm5lcigpDQoJCWp1bSA9IGludChpbnB1dCgnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBUYXJnZXQgSWQgTGltaXQg4p6jIFx4MWJbMTs5Mm0nKSkNCglleGNlcHQgVmFsdWVFcnJvcjoNCgkJcHJpbnQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXHgxYlsxOzkxbVdST05HIFRZUEUgJykNCgkJZXhpdCgpDQoJaWYganVtPDEgb3IganVtPjEwMDoNCgkJcHJpbnQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXHgxYlsxOzkxbVdyb25nIFR5cGUgICcpDQoJCWV4aXQoKQ0KCXNlcz1yZXF1ZXN0cy5TZXNzaW9uKCkNCgl5eiA9IDANCglmb3IgbWV0IGluIHJhbmdlKGp1bSk6DQoJCXl6Kz0xDQoJCWtsID0gaW5wdXQoaCsnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBFTlRFUiBQVUJMSUMgSUQgXHgxYlsxOzkxbVtceDFiWzE7OTJtJytzdHIoeXopKydceDFiWzE7OTFtXSBceDFiWzE7OTJt4p6jIFx4MWJbMTs5Nm0nKQ0KCQl1aWQuYXBwZW5kKGtsKQ0KCWZvciB1c2VyciBpbiB1aWQ6DQoJCXRyeToNCgkJCWNvbCA9IHNlcy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YyLjAvJyt1c2VycisnP2ZpZWxkcz1mcmllbmRzLmxpbWl0KDUwMDApJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXMgPSB7J2Nvb2tpZXMnOmNva30pLmpzb24oKQ0KCQkJZm9yIG1pIGluIGNvbFsnZnJpZW5kcyddWydkYXRhJ106DQoJCQkJdHJ5Og0KCQkJCQlpc28gPSAobWlbJ2lkJ10rJ3wnK21pWyduYW1lJ10pDQoJCQkJCWlmIGlzbyBpbiBpZDpwYXNzDQoJCQkJCWVsc2U6aWQuYXBwZW5kKGlzbykNCgkJCQlleGNlcHQ6Y29udGludWUNCgkJZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToNCgkJCXBhc3MNCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQkJcHJpbnQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXHgxYlsxOzkxbSBDaGVjayBZb3VyIEludGVybmV0IENvbm5lY3Rpb24nKQ0KCQkJZXhpdCgpDQoJdHJ5Og0KCQlwcmludChmJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgVG90YWwgSWQg4p6jIFx4MWJbMTs5Nm0nK3N0cihsZW4oaWQpKSkNCgkJU2V0dGluZ3MoKQ0KCWV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCgkJcHJpbnQoZid7dX0nKQ0KCQlwcmludCgnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtIENoZWNrIFlvdXIgSW50ZXJuZXQgQ29ubmVjdGlvbicpDQoJCWJhY2soKQ0KCWV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6DQoJCXByaW50KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtIFlvdXIgSWQgTWF5YmUgTm90IFB1YmxpY1xuIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBDaGVjayBZb3VyIElkXG4gXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIFx4MWJbMTs5MW1UaGVuIFRyeSBBZ2FpbicpDQoJCXRpbWUuc2xlZXAoMykNCgkJYmFjaygpDQoNCiMtLS0tLS0tLS0tLS0tWyBDUkFDSy1GUk9NLUZJTEUgXS0tLS0tLS0tLS0tLS0tLS0tLSMNCmRlZiBGKCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpOw0KICAgIEQoKS5wbGVycigpDQogICAgDQoNCmNsYXNzIEQ6DQoJZGVmIF9faW5pdF9fKHNlbGYpOg0KCQlzZWxmLmlkID0gW10NCglkZWYgcGxlcnIoc2VsZik6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQliYW5uZXIoKQ0KCQl0cnk6DQoJCQlwcmludChmJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXDAzM1s0N21cMDMzWzE7MzRtICAgICBFeGFtcGxlOiAvc2RjYXJkL01BTVVOLnR4dCAgICAgXDAzM1s0MG1cMDMzWzAwbScpDQoJCQlmaWxlWCA9IGlucHV0ICgnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBFbnRlciBZb3VyIEZpbGUg4p6jXHgxYlsxOzkzbSAnKSANCgkJCWZvciBsaW5lIGluIG9wZW4oZmlsZVgsICdyJykucmVhZGxpbmVzKCk6DQoJCQkJaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCgkJCXByaW50KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTJtVE9UQUwgSUQg4p6jIFx4MWJbMTs5Mm0nK3N0cihsZW4oaWQpKSkNCgkJCVNldHRpbmdzKCkNCgkJZXhjZXB0IElPRXJyb3I6DQoJCQlwcmludCgiIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtIGZpbGUgJXMgbm90IGZvdW5kXHgxYlswbSIlKGZpbGVYKSk7dGltZS5zbGVlcCgyKQ0KCQkJRigpDQojLS0tLS0tLS0tLS0tLVsgUEVOR0FUVVJBTi1JRFogXS0tLS0tLS0tLS0tLS0tLSMNCmRlZiBTZXR0aW5ncygpOg0KCXByaW50KGYnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtW1x4MWJbMTs5Mm0xXHgxYlsxOzkxbV1ceDFiWzE7OTJtIE9ubHkgTmV3IElkIFx4MWJbMTs5Mm1bQkVTVF1cbiBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXHgxYlsxOzkxbVtceDFiWzE7OTJtMlx4MWJbMTs5MW1dXHgxYlsxOzkybSBOZXcgT2xkIE1peCcpDQoJaHUgPSBpbnB1dCgnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTRtQ2hvb3NlIOKeo1x4MWJbMTs5Mm0gJykNCglpZiBodSBpbiBbJzEnLCcwMSddOg0KCQltdWRhPVtdDQoJCWZvciBiYWNvdCBpbiBzb3J0ZWQoaWQpOg0KCQkJbXVkYS5hcHBlbmQoYmFjb3QpDQoJCWJjbT1sZW4obXVkYSkNCgkJYmNtaT0oYmNtLTEpDQoJCWZvciB4bXVkIGluIHJhbmdlKGJjbSk6DQoJCQlpZDIuYXBwZW5kKG11ZGFbYmNtaV0pDQoJCQliY21pIC09MQ0KCWVsaWYgaHUgaW4gWycyJywnMDInXToNCgkJZm9yIGJhY290IGluIGlkOg0KCQkJeHggPSByYW5kb20ucmFuZGludCgwLGxlbihpZDIpKQ0KCQkJaWQyLmluc2VydCh4eCxiYWNvdCkNCgllbHNlOg0KCQlwcmludCgnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBceDFiWzE7OTFtV3JvbmcgT3B0aW9uIEJhcmEnKQ0KCQlleGl0KCkNCgkNCglwcmludChmJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXHgxYlsxOzkxbVtceDFiWzE7OTJtMVx4MWJbMTs5MW1dXHgxYlsxOzkybSBNb2JpbGUgW0JFU1RdJykNCgloYyA9IGlucHV0KCcgXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIFx4MWJbMTs5NG1DaG9vc2Ug4p6jXHgxYlsxOzkybSAnKQ0KCWlmIGhjIGluIFsnMScsJzAxJ106DQoJCW1ldGhvZC5hcHBlbmQoJ21vYmlsZScpDQoJZWxzZToNCgkJbWV0aG9kLmFwcGVuZCgnbW9iaWxlJykNCglwd3BsdXM9aW5wdXQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgXDAzM1s0N21cMDMzWzE7MzVtICAgICBQQVNTV09SRCBNRU5VICAgICBcMDMzWzQwbVwwMzNbMDBtXG4gXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIE1hbnVhbCBQYXNzd29yZCBceDFiWzE7OTFtW21dXG4gXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIEF1dG8gUGFzc3dvcmQgXHgxYlsxOzk2bVtkXSBceDFiWzE7OTJtW0JFU1RdXG4gXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIFx4MWJbMTs5NG1DaG9pY2Ug4p6jIFx4MWJbMTs5Mm0nKQ0KCWlmIHB3cGx1cyBpbiBbJ3knLCdZJ106DQoJCXB3cGx1c3MuYXBwZW5kKCd5YScpDQoJCXByaW50KGYnQWRkIFBhc3N3b3JkIE1hbnVhbCBNaW5pbWFtIDYgQ2hhcmFjdGVyJykNCgkJcHdrdT1pbnB1dCgnIFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBBZGQgUGFzc3dvcmQgTWFudWFsIDogJykNCgkJcHdrdWg9cHdrdS5zcGxpdCgnLCcpDQoJCWZvciB4cHcgaW4gcHdrdWg6DQoJCQlwd255YS5hcHBlbmQoeHB3KQ0KCWVsc2U6DQoJCXB3cGx1c3MuYXBwZW5kKCdubycpDQoJcGFzc3dyZCgpDQoJZXhpdCgpIA0KIy0tLS0tLS0tLS0tLS0tLS0tLS1bIEJBR0lBTi1XT1JETElTVCBdLS0tLS0tLS0tLS0tIw0KZGVmIHBhc3N3cmQoKToNCglwcmludChmJ1x4MWJbMTs5MW3il49ceDFiWzE7OTJt4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQXHgxYlsxOzkxbeKdtFwwMzNbNDdtXDAzM1sxOzMwbU1YXDAzM1s0MG1cMDMzWzAwbVx4MWJbMTs5MW3inbVceDFiWzE7OTJt4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQ4pSB4pWQXHgxYlsxOzkxbeKXjycpDQoJcHJpbnQoZiJceDFiWzE7OTFtIFvwn5iNXSBceDFiWzE7OTJtWW91ciBOYW1lICAgICAgICAgXHgxYlsxOzkxbeKeoiBceDFiWzE7OTJtIitzdHIoS0FVU0FSX05BTUUpKQ0KCXByaW50KGYiXHgxYlsxOzkxbSBb8J+agF0gXHgxYlsxOzkybVRPVEFMIElEICAgICAgICAgIFx4MWJbMTs5MW3inqIgXHgxYlsxOzkybSIrc3RyKGxlbihpZCkpKQ0KCXByaW50KGYiXHgxYlsxOzkxbSBb8J+SiV0gXHgxYlsxOzkybVRPREFZIFRJTUUgICAgICAgIFx4MWJbMTs5MW3inqIgXHgxYlsxOzkybSIrc3RyKGEpKyI6IitzdHIobHQoKVs0XSkrIiAiKyB0YWcrIiAiKQ0KCXByaW50KGYiXHgxYlsxOzkxbSBb8J+SiV0gXHgxYlsxOzkybVRPREFZIERBVEUgICAgICAgIFx4MWJbMTs5MW3inqIgXHgxYlsxOzkybXtoYX1ceDFiWzE7OTFtL1x4MWJbMTs5Mm17YnV9XHgxYlsxOzkxbS9ceDFiWzE7OTJte3RhfSAiKQ0KCXByaW50KGYiXHgxYlsxOzkxbSBb8J+YqV0gXHgxYlsxOzkxbU5PVEUg4p6iIFwzM1sxOzkybVsgVVNFIEFJUlBMQU5FIE1PREUgQkVGT1JFIFVTRSBdICIpDQoJcHJpbnQoZidceDFiWzE7OTFt4pePXHgxYlsxOzkybeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkFx4MWJbMTs5MW3inbRcMDMzWzQ3bVwwMzNbMTszMG1NWFwwMzNbNDBtXDAzM1swMG1ceDFiWzE7OTFt4p21XHgxYlsxOzkybeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkOKUgeKVkFx4MWJbMTs5MW3il49cbicpDQoJd2l0aCB0cmVkKG1heF93b3JrZXJzPTMwKSBhcyBwb29sOg0KCQlmb3IgeXV6b25nIGluIGlkMjoNCgkJCWlkZixubWYgPSB5dXpvbmcuc3BsaXQoJ3wnKVswXSx5dXpvbmcuc3BsaXQoJ3wnKVsxXS5sb3dlcigpDQoJCQlmcnMgPSBubWYuc3BsaXQoJyAnKVswXQ0KCQkJcHd2ID0gW10NCgkJCWlmIGxlbihubWYpPDY6DQoJCQkJaWYgbGVuKGZycyk8MzoNCgkJCQkJcGFzcw0KCQkJCWVsc2U6DQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjMnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMTIzNCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0NScpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0NTYnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMjAyMCcpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycyMDIxJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzIwMjInKQ0KCQkJZWxzZToNCgkJCQlpZiBsZW4oZnJzKTwzOg0KCQkJCQlwd3YuYXBwZW5kKG5tZikNCgkJCQllbHNlOg0KCQkJCQlwd3YuYXBwZW5kKG5tZikNCgkJCQkJcHd2LmFwcGVuZChubWYrJ0BAJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzEyMycpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycxMjM0JykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzEyMzQ1JykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzEyMzQ1NicpDQoJCQkJCXB3di5hcHBlbmQoZnJzKycyMDIwJykNCgkJCQkJcHd2LmFwcGVuZChmcnMrJzIwMjEnKQ0KCQkJCQlwd3YuYXBwZW5kKGZycysnMjAyMicpDQoJCQlpZiAneWEnIGluIHB3cGx1c3M6DQoJCQkJZm9yIHhwd2QgaW4gcHdueWE6DQoJCQkJCXB3di5hcHBlbmQoeHB3ZCkNCgkJCWVsc2U6cGFzcw0KCQkJaWYgJ21vYmlsZScgaW4gbWV0aG9kOg0KCQkJCXBvb2wuc3VibWl0KGNyYWNrLGlkZixwd3YpDQoJCQllbGlmICdmcmVlJyBpbiBtZXRob2Q6DQoJCQkJcG9vbC5zdWJtaXQoY3JhY2tmcmVlLGlkZixwd3YpDQoJCQllbGlmICd0b3VjaCcgaW4gbWV0aG9kOg0KCQkJCXBvb2wuc3VibWl0KGNyYWNrdG91Y2gsaWRmLHB3dikNCglwcmludChmJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgQ1JBQ0sgQ09NUExFVEUgJykNCglwcmludChmJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgT0sgOiB7aH0lcyAnJShvaykpDQoJcHJpbnQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgIE1haW4gTWFudSBceDFiWzE7OTJtW1ldXG4gXHgxYlsxOzkxbeKeolx4MWJbMTs5Nm3inqNceDFiWzE7OTJt4p6jIFx4MWJbMTs5MW1FeGl0IFtUXScpDQoJd29pID0gaW5wdXQoJyBceDFiWzE7OTFt4p6iXHgxYlsxOzk2beKeo1x4MWJbMTs5Mm3inqMgQ2hvb3NlIDogJykNCglpZiB3b2kgaW4gWyd5JywnWSddOg0KCQliYWNrKCkNCgllbHNlOg0KCQlwcmludChmJ1x0IFx4MWJbMTs5MW3inqJceDFiWzE7OTZt4p6jXHgxYlsxOzkybeKeoyBBbGxhaCBIYWZpeiBCcm8ge3V9ICcpDQoJCXRpbWUuc2xlZXAoMikNCgkJZXhpdCgpDQojLS0tLS0tLS0tLS0tLS0tLS0tLS1bIE1FVE9ERS1CLUFQSSBdLS0tLS0tLS0tLS0tLS0tLS0jDQpkZWYgY3JhY2soaWRmLHB3dik6DQoJZ2xvYmFsIGxvb3Asb2ssY3ANCglibyA9IHJhbmRvbS5jaG9pY2UoW20sayxoLGIsdSx4XSkNCglzeXMuc3Rkb3V0LndyaXRlKGYiXHJ7Ym99IFtNWF0ge2h9W3trfXtsb29wfS97bGVuKGlkKX17aH1dIHtofVtPS10ge2h9W3tva31dIHtofVt7J3s6LjAlfScuZm9ybWF0KGxvb3AvZmxvYXQobGVuKGlkKSkpfV0gICIpLA0KCXN5cy5zdGRvdXQuZmx1c2goKQ0KCXVhID0gcmFuZG9tLmNob2ljZSh1Z2VuKQ0KCXVhMiA9IHJhbmRvbS5jaG9pY2UodWdlbjIpDQoJc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpDQoJZm9yIHB3IGluIHB3djoNCgkJdHJ5Og0KCQkJbmlwPXJhbmRvbS5jaG9pY2UocHJveCkNCgkJCXByb3hzPSB7J2h0dHAnOiAnc29ja3M0Oi8vJytuaXB9DQoJCQlzZXMuaGVhZGVycy51cGRhdGUoeyJIb3N0IjonbS5mYWNlYm9vay5jb20nLCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjoiMSIsInVzZXItYWdlbnQiOnVhMiwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKltpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBjbG9zZXJdL1tpbnNlcnRlZCBieSBjeXRob24gdG8gYXZvaWQgY29tbWVudCBzdGFydF0qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45IiwiZG50IjoiMSIsIngtcmVxdWVzdGVkLXdpdGgiOiJtYXJrLnZpYS5ncCIsInNlYy1mZXRjaC1zaXRlIjoic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ImNvcnMiLCJzZWMtZmV0Y2gtdXNlciI6ImVtcHR5Iiwic2VjLWZldGNoLWRlc3QiOiJkb2N1bWVudCIsInJlZmVyZXIiOiJodHRwczovL20uZmFjZWJvb2suY29tLyIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUgYnIiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJlbi1HQixlbi1VUztxPTAuOSxlbjtxPTAuOCJ9KQ0KCQkJcCA9IHNlcy5nZXQoJ2h0dHBzOi8vcC5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3Bhc3N3b3JkLz91aWQ9JytpZGYrJyZmbG93PWxvZ2luX25vX3BpbiZyZWZzcmM9ZGVwcmVjYXRlZCZfcmRyJykNCgkJCWRhdGFhID17ImxzZCI6cmUuc2VhcmNoKCduYW1lPSJsc2QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksImphem9lc3QiOnJlLnNlYXJjaCgnbmFtZT0iamF6b2VzdCIgdmFsdWU9IiguKj8pIicsIHN0cihwLnRleHQpKS5ncm91cCgxKSwidWlkIjppZGYsIm5leHQiOiJodHRwczovL3AuZmFjZWJvb2suY29tL2xvZ2luL3NhdmUtZGV2aWNlLyIsImZsb3ciOiJsb2dpbl9ub19waW4iLCJwYXNzIjpwdyx9DQoJCQlrb2tpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gcC5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQ0KCQkJa29raSs9JyBtX3BpeGVsX3JhdGlvPTIuNjI1OyB3ZD00MTJ4NzU2Jw0KCQkJaGVhZGU9eyJIb3N0IjonbS5mYWNlYm9vay5jb20nLCJjYWNoZS1jb250cm9sIjoibWF4LWFnZT0wIiwidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJvcmlnaW4iOiJodHRwczovL20uZmFjZWJvb2suY29tIiwiY29udGVudC10eXBlIjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwidXNlci1hZ2VudCI6dWEsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsIngtcmVxdWVzdGVkLXdpdGgiOiJtYXJrLnZpYS5ncCIsInNlYy1mZXRjaC1zaXRlIjoic2FtZS1vcmlnaW4iLCJzZWMtZmV0Y2gtbW9kZSI6ImNvcnMiLCJzZWMtZmV0Y2gtdXNlciI6ImVtcHR5Iiwic2VjLWZldGNoLWRlc3QiOiJkb2N1bWVudCIsInJlZmVyZXIiOiJodHRwczovL20uZmFjZWJvb2suY29tL2luZGV4LnBocD9uZXh0PWh0dHBzJTNBJTJGJTJGZGV2ZWxvcGVycy5mYWNlYm9vay5jb20lMkZ0b29scyUyRmRlYnVnJTJGYWNjZXNzdG9rZW4lMkYiLCJhY2NlcHQtZW5jb2RpbmciOiJnemlwLCBkZWZsYXRlIGJyIiwiYWNjZXB0LWxhbmd1YWdlIjoiZW4tR0IsZW4tVVM7cT0wLjksZW47cT0wLjgifQ0KCQkJcG8gPSBzZXMucG9zdCgnaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvdmFsaWRhdGUtcGFzc3dvcmQvP3NoYmw9MCcsZGF0YT1kYXRhYSxjb29raWVzPXsnY29va2llJzoga29raX0saGVhZGVycz1oZWFkZSxhbGxvd19yZWRpcmVjdHM9RmFsc2UscHJveGllcz1wcm94cykNCgkJCWlmICJjaGVja3BvaW50IiBpbiBwby5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOg0KCQkJCXByaW50KGYnXHIgXHgxYlsxOzkxbU1YX0NQIHtpZGZ9IHwge3B3fXtOfScpICAgICANCgkJCQlvcy5zeXN0ZW0oInBsYXktYXVkaW8gQmFkX0x1Y2tfQ1AubXAzIikNCgkJCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykNCgkJCQlha3VuLmFwcGVuZChpZGYrJ3wnK3B3KQ0KCQkJCWNwKz0xDQoJCQkJYnJlYWsNCgkJCWVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6DQoJCQkJb2srPTENCgkJCQljb2tpPXBvLmNvb2tpZXMuZ2V0X2RpY3QoKQ0KCQkJCWt1a2kgPSAoIjsiKS5qb2luKFsgIiVzPSVzIiAlIChrZXksIHZhbHVlKSBmb3Iga2V5LCB2YWx1ZSBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCgkJCQlwcmludChmJ1xye0h9XG4gTVhfT0sgW/CfkppdIHtpZGZ9IHwge3B3fVxuIFvwn5KJXUNPT0tJRVMg4p6iIHtrdWtpfVxuIFvwn5qAXVVTRVIgQUdFTlQg4p6iIHt1YX17Tn0nKQ0KCQkJCW9zLnN5c3RlbSgicGxheS1hdWRpbyBNWF9PSy5tcDMiKQ0KCQkJCWNla19hcGsoc2Vzc2lvbixjb2tpKQ0KCQkJCW9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKyd8JytwdysnfCcrdWErJ1xuJykNCgkJCQlicmVhaw0KCQkJCQ0KCQkJZWxzZToNCgkJCQljb250aW51ZQ0KCQlleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQoJCQl0aW1lLnNsZWVwKDMxKQ0KCWxvb3ArPTENCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ0hFQ0stT1BTSS1DSEVLUE9JTlQgXS0tLS0tLS0tLS0tLS0tLS0tLS0jDQpkZWYgY2VrZXIoaWRmLHB3KToNCglnbG9iYWwgY3ANCgl1YSA9ICdNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85OC4wLjQ3NTguMTI4IFNhZmFyaS81MzcuMzYgRkJNRi9IVUFXRUk7RkJCRC9IVUFXRUk7RkJQTi9jb20uZmFjZWJvb2suc2VydmljZXM7RkJEVi9FVlItTDI5O0ZCU1YvMTA7RkJMUi8wO0ZCQksvMTtGQkNBL2FybTY0LXY4YTo7XScNCgloZWFkID0geyJIb3N0IjogIm1iYXNpYy5mYWNlYm9vay5jb20iLCJjYWNoZS1jb250cm9sIjogIm1heC1hZ2U9MCIsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiAiMSIsIm9yaWdpbiI6ICJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20iLCJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwidXNlci1hZ2VudCI6IHVhLCJhY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsIngtcmVxdWVzdGVkLXdpdGgiOiAibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6ICJzYW1lLW9yaWdpbiIsInNlYy1mZXRjaC1tb2RlIjogIm5hdmlnYXRlIiwic2VjLWZldGNoLXVzZXIiOiAiPzEiLCJzZWMtZmV0Y2gtZGVzdCI6ICJkb2N1bWVudCIsInJlZmVyZXIiOiAiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luLz9uZXh0JnJlZj1kYmwmZmwmcmVmaWQ9OCIsImFjY2VwdC1lbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwiYWNjZXB0LWxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43In0NCglzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkNCgl0cnk6DQoJCWhpID0gc2VzLmdldCgnaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tJykNCgkJaG8gPSBzb3Aoc2VzLnBvc3QoJ2h0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi5waHAnLCBkYXRhPXsnZW1haWwnOmlkZiwncGFzcyc6cHcsJ2xvZ2luJzonc3VibWl0J30sIGhlYWRlcnM9aGVhZCwgYWxsb3dfcmVkaXJlY3RzPVRydWUpLnRleHQsJ2h0bWwucGFyc2VyJykNCgkJam8gPSBoby5maW5kKCdmb3JtJykNCgkJZGF0YSA9IHt9DQoJCWxpb24gPSBbJ25oJywnamF6b2VzdCcsJ2ZiX2R0c2cnLCdzdWJtaXRbQ29udGludWVdJywnY2hlY2twb2ludF9kYXRhJ10NCgkJZm9yIGFuaiBpbiBqbygnaW5wdXQnKToNCgkJCWlmIGFuai5nZXQoJ25hbWUnKSBpbiBsaW9uOg0KCQkJCWRhdGEudXBkYXRlKHthbmouZ2V0KCduYW1lJyk6YW5qLmdldCgndmFsdWUnKX0pDQoJCWtlbnQgPSBzb3Aoc2VzLnBvc3QoJ2h0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbScrc3RyKGpvWydhY3Rpb24nXSksIGRhdGE9ZGF0YSwgaGVhZGVycz1oZWFkKS50ZXh0LCdodG1sLnBhcnNlcicpDQoJCXByaW50KCdcciVzKysrKyAlc3wlcyAtLS0tPiBDUCAgICAgICAlcyclKGIsaWRmLHB3LHgpKQ0KCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykNCgkJY3ArPTENCgkJb3BzaSA9IGtlbnQuZmluZF9hbGwoJ29wdGlvbicpDQoJCWlmIGxlbihvcHNpKT09MDoNCgkJCXByaW50KCdcciVzLS0tPiBUYXAgWWVzIC8gQTJGIChDaGVjayAgTG9naW4gSWQgTGl0ZS9NYmFzaWMlcyknJShoaCx4KSkNCgkJZWxzZToNCgkJCWZvciBvcHNpaSBpbiBvcHNpOg0KCQkJCXByaW50KCdcciVzLS0tPiAlcyVzJyUoa2ssb3BzaWkudGV4dCx4KSkNCglleGNlcHQgRXhjZXB0aW9uIGFzIGM6DQoJCXByaW50KCdcciVzKysrKyAlc3wlcyAtLS0tPiBDUCAgICAgICAlcyclKGIsaWRmLHB3LHgpKQ0KCQlwcmludCgnXHIlcy0tLT4gQ2Fubm90IENoZWNrIE9wdGlvbnMgKENoZWNrIExvZ2luIEluIExpdGUvQmFzaWMpJXMnJSh1LHgpKQ0KCQlvcGVuKCdDUC8nK2NwYywnYScpLndyaXRlKGlkZisnfCcrcHcrJ1xuJykNCgkJY3ArPTENCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ0hFQ0stT1BTSS1DSEVLUE9JTlQtMiBdLS0tLS0tLS0tLS0tLS0tLSMNCmRlZiBjZWtfb3BzaSgpOg0KCWMgPSBsZW4oYWt1bikNCglodSA9ICdUZXJkYXBhdCAlcyBBa3VuIFVudHVrIERpY2VrXG5TZWJlbHVtIE11bGFpLCBNb2RlIFBlc2F3YXQvVWJhaCBLYXJ0dSBTaW0gVGVybGViaWggRGFodWx1JyUoYykNCgljZXRhayhuZWwoaHUsIHRpdGxlPSdDRUsgT1BTSScpKQ0KCWlucHV0KHUrJ1snK2grJ+KAoicrdSsnXSBNdWxhaScpDQoJY2VrID0gJyMgUFJPU0VTIENFSyBPUFNJIERJTVVMQUknDQoJc29sKCkucHJpbnQobWFyayhjZWssIHN0eWxlPSdncmVlbicpKQ0KCWxvdmUgPSAwDQoJZm9yIGtlcyBpbiBha3VuOg0KCQl0cnk6DQoJCQl0cnk6DQoJCQkJaWQscHcgPSBrZXMuc3BsaXQoJ3wnKVswXSxrZXMuc3BsaXQoJ3wnKVsxXQ0KCQkJZXhjZXB0IEluZGV4RXJyb3I6DQoJCQkJdGltZS5zbGVlcCgyKQ0KCQkJCXByaW50KCdcciVzKysrKyAlcyAtLS0tPiBFcnJvciAgICAgICVzJyUoYixrZXMseCkpDQoJCQkJcHJpbnQoJ1xyJXMtLS0+IFNlcGFyYXRvciBOb3QgU3VwcG9ydGVkIEZvciBUaGlzIFByb2dyYW0lcyclKHUseCkpDQoJCQkJY29udGludWUNCgkJCWJpID0gcmFuZG9tLmNob2ljZShbdSxrLGtrLGIsaCxoaF0pDQoJCQlwcmludCgnXHIlcy0tLT4gJXMvJXMgLS0tPiB7ICVzIH0lcyclKGJpLGxvdmUsbGVuKGFrdW4pLGlkLHgpLCBlbmQ9JyAnKTtzeXMuc3Rkb3V0LmZsdXNoKCkNCgkJCXVhID0gJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMTsgVEVDTk8gS0Q4KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTguMC40NzU1LjEwMSBNb2JpbGUgU2FmYXJpLzUzNy4zNicNCgkJCXNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KCQkJaGVhZGVyID0geyJIb3N0IjogIm1iYXNpYy5mYWNlYm9vay5jb20iLCJjYWNoZS1jb250cm9sIjogIm1heC1hZ2U9MCIsInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiAiMSIsIm9yaWdpbiI6ICJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20iLCJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwidXNlci1hZ2VudCI6IHVhLCJhY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsIngtcmVxdWVzdGVkLXdpdGgiOiAibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6ICJzYW1lLW9yaWdpbiIsInNlYy1mZXRjaC1tb2RlIjogIm5hdmlnYXRlIiwic2VjLWZldGNoLXVzZXIiOiAiPzEiLCJzZWMtZmV0Y2gtZGVzdCI6ICJkb2N1bWVudCIsInJlZmVyZXIiOiAiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL2xvZ2luLz9uZXh0JnJlZj1kYmwmZmwmcmVmaWQ9OCIsImFjY2VwdC1lbmNvZGluZyI6ICJnemlwLCBkZWZsYXRlIiwiYWNjZXB0LWxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43In0NCgkJCWhpID0gc2VzLmdldCgnaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tJykNCgkJCWhvID0gc29wKHNlcy5wb3N0KCdodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vbG9naW4ucGhwJywgZGF0YT17J2VtYWlsJzppZCwncGFzcyc6cHcsJ2xvZ2luJzonc3VibWl0J30sIGhlYWRlcnM9aGVhZGVyLCBhbGxvd19yZWRpcmVjdHM9VHJ1ZSkudGV4dCwnaHRtbC5wYXJzZXInKQ0KCQkJaWYgImNoZWNrcG9pbnQiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOg0KCQkJCXRyeToNCgkJCQkJam8gPSBoby5maW5kKCdmb3JtJykNCgkJCQkJZGF0YSA9IHt9DQoJCQkJCWxpb24gPSBbJ25oJywnamF6b2VzdCcsJ2ZiX2R0c2cnLCdzdWJtaXRbQ29udGludWVdJywnY2hlY2twb2ludF9kYXRhJ10NCgkJCQkJZm9yIGFuaiBpbiBqbygnaW5wdXQnKToNCgkJCQkJCWlmIGFuai5nZXQoJ25hbWUnKSBpbiBsaW9uOg0KCQkJCQkJCWRhdGEudXBkYXRlKHthbmouZ2V0KCduYW1lJyk6YW5qLmdldCgndmFsdWUnKX0pDQoJCQkJCWtlbnQgPSBzb3Aoc2VzLnBvc3QoJ2h0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbScrc3RyKGpvWydhY3Rpb24nXSksIGRhdGE9ZGF0YSwgaGVhZGVycz1oZWFkZXIpLnRleHQsJ2h0bWwucGFyc2VyJykNCgkJCQkJcHJpbnQoJ1xyJXMrKysrICVzfCVzIC0tLS0+IENQICAgICAgICVzJyUoYixpZCxwdyx4KSkNCgkJCQkJb3BzaSA9IGtlbnQuZmluZF9hbGwoJ29wdGlvbicpDQoJCQkJCWlmIGxlbihvcHNpKT09MDoNCgkJCQkJCXByaW50KCdcciVzLS0tPiBUYXAgWWVzIC8gQTJGIChDZWsgTG9naW4gRGkgTGl0ZS9NYmFzaWMlcyknJShoaCx4KSkNCgkJCQkJZWxzZToNCgkJCQkJCWZvciBvcHNpaSBpbiBvcHNpOg0KCQkJCQkJCXByaW50KCdcciVzLS0tPiAlcyVzJyUoa2ssb3BzaWkudGV4dCx4KSkNCgkJCQlleGNlcHQ6DQoJCQkJCXByaW50KCdcciVzKysrKyAlc3wlcyAtLS0tPiBDUCAgICAgICAlcyclKGIsaWQscHcseCkpDQoJCQkJCXByaW50KCdcciVzLS0tPiBDYW5ub3QgQ2hlY2sgT3B0aW9ucyVzJyUodSx4KSkNCgkJCWVsaWYgImNfdXNlciIgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6DQoJCQkJcHJpbnQoJ1xyJXMrKysrICVzfCVzIC0tLS0+IE9LICAgICAgICVzJyUoaCxpZCxwdyx4KSkNCgkJCWVsc2U6DQoJCQkJcHJpbnQoJ1xyJXMrKysrICVzfCVzIC0tLS0+IFNBTEFIICAgICAgICVzJyUoeCxpZCxwdyx4KSkNCgkJCWxvdmUrPTENCgkJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQkJcHJpbnQoJycpDQoJCQlsaSA9ICcjIEtPTkVLU0kgSU5URVJORVQgQkVSTUFTQUxBSCwgUEVSSUtTQSAmIENPQkEgTEFHSScNCgkJCXNvbCgpLnByaW50KG1hcmsobGksIHN0eWxlPSdyZWQnKSkNCgkJCWV4aXQoKQ0KCWRhaCA9ICcjIERPTkUnDQoJc29sKCkucHJpbnQobWFyayhkYWgsIHN0eWxlPSdncmVlbicpKQ0KCWV4aXQoKQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIENFSy1BUExJS0FTSSBdLS0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KZGVmIGNla19hcGsoc2Vzc2lvbixjb29raWUpOg0KCXc9c2Vzc2lvbi5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9zZXR0aW5ncy9hcHBzL3RhYmJlZC8/dGFiPWFjdGl2ZSIsY29va2llcz17ImNvb2tpZSI6Y29va2llfSkudGV4dA0KCXNvcCA9IEJlYXV0aWZ1bFNvdXAodywiaHRtbC5wYXJzZXIiKQ0KCXggPSBzb3AuZmluZCgiZm9ybSIsbWV0aG9kPSJwb3N0IikNCglnYW1lID0gW2kudGV4dCBmb3IgaSBpbiB4LmZpbmRfYWxsKCJoMyIpXQ0KCWlmIGxlbihnYW1lKT09MDoNCgkJcHJpbnQoZiJcbiB7Tn1be019IXtOfV0gb3BzaGggdGlkYWsgYWRhIGFwbGlrYXNpIGFrdGlmIGRpIGFrdW4gaW5pLiIpDQoJZWxzZToNCgkJZm9yIGkgaW4gcmFuZ2UobGVuKGdhbWUpKToNCgkJCXByaW50KCIgICAlcyVzLiAlcyVzIiUoSCxpKzEsZ2FtZVtpXS5yZXBsYWNlKCJEaXRhbWJhaGthbiBwYWRhIiwiIERpdGFtYmFoa2FuIHBhZGEiKSxOKSkNCgl3PXNlc3Npb24uZ2V0KCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vc2V0dGluZ3MvYXBwcy90YWJiZWQvP3RhYj1pbmFjdGl2ZSIsY29va2llcz17ImNvb2tpZSI6Y29va2llfSkudGV4dA0KCXNvcCA9IEJlYXV0aWZ1bFNvdXAodywiaHRtbC5wYXJzZXIiKQ0KCXggPSBzb3AuZmluZCgiZm9ybSIsbWV0aG9kPSJwb3N0IikNCglnYW1lID0gW2kudGV4dCBmb3IgaSBpbiB4LmZpbmRfYWxsKCJoMyIpXQ0KCWlmIGxlbihnYW1lKT09MDoNCgkJcHJpbnQoZiJcbiB7Tn1be019IXtOfV0gb3BzaGggdGlkYWsgYWRhIGFwbGlrYXNpIGthZGFsdWFyc2EgZGkgYWt1biBpbmkuIikNCgllbHNlOg0KCQlmb3IgaSBpbiByYW5nZShsZW4oZ2FtZSkpOg0KCQkJcHJpbnQoIiAgICVzJXMuICVzJXMiJShLLGkrMSxnYW1lW2ldLnJlcGxhY2UoIktlZGFsdXdhcnNhIiwiIEtlZGFsdXdhcnNhIiksTikpDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIFNZU1RFTS1DT05UUk9MIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMNCmlmIF9fbmFtZV9fPT0nX19tYWluX18nOg0KCXRyeTpvcy5zeXN0ZW0oJ2dpdCBwdWxsJykNCglleGNlcHQ6cGFzcw0KCXRyeTpvcy5ta2RpcignT0snKQ0KCWV4Y2VwdDpwYXNzDQoJdHJ5Om9zLm1rZGlyKCdDUCcpDQoJZXhjZXB0OnBhc3MNCgl0cnk6b3MubWtkaXIoJ0RVTVAnKQ0KCWV4Y2VwdDpwYXNzDQoJdHJ5Om9zLnN5c3RlbSgndG91Y2ggLnByb3gudHh0JykNCglleGNlcHQ6cGFzcw0KCWxvZ2luKCk="))